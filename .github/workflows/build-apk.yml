name: Build and Deploy APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

env:
  PRODUCTION_URL: https://chasepay.pro

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Get version info
      id: version
      run: |
        cd apk
        # Extract current version code, handling both formats: "versionCode 1" and "versionCode = 1"
        VERSION_CODE=$(grep "versionCode" app/build.gradle | head -1 | sed 's/.*versionCode\s*=\?\s*\([0-9]\+\).*/\1/')
        echo "Current version code: $VERSION_CODE"
        
        # Increment version code
        if [ -z "$VERSION_CODE" ]; then
          echo "Warning: Could not extract version code, using default"
          VERSION_CODE=1
        fi
        NEW_VERSION_CODE=$((VERSION_CODE + 1))
        VERSION_NAME="1.0.$NEW_VERSION_CODE"
        
        echo "version_code=$NEW_VERSION_CODE" >> $GITHUB_OUTPUT
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "Building version $VERSION_NAME"

    - name: Update version
      run: |
        cd apk
        sed -i "s/versionCode .*/versionCode ${{ steps.version.outputs.version_code }}/g" app/build.gradle
        sed -i "s/versionName \".*\"/versionName \"${{ steps.version.outputs.version_name }}\"/g" app/build.gradle

    - name: Update BASE_URL for production
      run: |
        cd apk
        # Replace the debug BASE_URL with production URL
        sed -i "s|http://10.0.2.2:3000|https://chasepay.pro/api|g" app/build.gradle
        # Show the change
        grep "BASE_URL" app/build.gradle

    - name: Grant execute permission for gradlew
      run: |
        cd apk
        chmod +x gradlew

    - name: Build Debug APK
      run: |
        cd apk
        ./gradlew clean assembleDebug

    - name: Copy APK
      run: |
        cp apk/app/build/outputs/apk/debug/app-debug.apk chase-mobile-${{ steps.version.outputs.version_name }}.apk
        ls -la chase-mobile-*.apk

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: chase-mobile-apk
        path: chase-mobile-*.apk

    - name: Create Git Tag
      if: github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a v${{ steps.version.outputs.version_name }} -m "Release v${{ steps.version.outputs.version_name }}"
        git push origin v${{ steps.version.outputs.version_name }}

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: github.event_name == 'push'
      with:
        tag_name: v${{ steps.version.outputs.version_name }}
        name: Chase Mobile ${{ steps.version.outputs.version_name }}
        body: |
          ## Chase Mobile App
          
          Version: ${{ steps.version.outputs.version_name }}
          Build: ${{ steps.version.outputs.version_code }}
          Server: https://chasepay.pro/api
          
          ### Download
          [chase-mobile-${{ steps.version.outputs.version_name }}.apk](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version_name }}/chase-mobile-${{ steps.version.outputs.version_name }}.apk)
        files: chase-mobile-*.apk
        draft: false
        prerelease: false


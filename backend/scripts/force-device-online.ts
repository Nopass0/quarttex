import { db } from "../src/db"

async function forceDeviceOnline() {
  try {
    // Find the emulated device
    const device = await db.device.findFirst({
      where: { 
        emulated: true
      }
    })
    
    if (!device) {
      console.log("‚ùå No emulated device found")
      return
    }
    
    console.log("üì± Found device:", device.name)
    console.log("   Current status:", device.isOnline ? "üü¢ Online" : "üî¥ Offline")
    
    // Force device online
    await db.device.update({
      where: { id: device.id },
      data: {
        isOnline: true,
        lastActiveAt: new Date(),
        energy: 85,
        ethernetSpeed: 100
      }
    })
    
    console.log("‚úÖ Device forced online")
    
    // Create more notifications
    const messages = [
      "–ü–µ—Ä–µ–≤–æ–¥ 1,234.50 ‚ÇΩ –æ—Ç –ú–∞—Ä–∏—è –ü. –ë–∞–ª–∞–Ω—Å: 45,678.90 ‚ÇΩ",
      "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ 10,000.00 ‚ÇΩ. –ë–∞–ª–∞–Ω—Å: 55,678.90 ‚ÇΩ", 
      "–ü–æ–∫—É–ø–∫–∞ 567.00 ‚ÇΩ –≤ –ü—è—Ç–µ—Ä–æ—á–∫–∞. –ë–∞–ª–∞–Ω—Å: 55,111.90 ‚ÇΩ",
      "–ü–µ—Ä–µ–≤–æ–¥ 2,500.00 ‚ÇΩ –æ—Ç –ü–µ—Ç—Ä –°. –ë–∞–ª–∞–Ω—Å: 57,611.90 ‚ÇΩ"
    ]
    
    for (const msg of messages) {
      await db.notification.create({
        data: {
          deviceId: device.id,
          type: "AppNotification",
          application: "ru.sberbankmobile",
          title: "–°–±–µ—Ä–ë–∞–Ω–∫ –û–Ω–ª–∞–π–Ω",
          message: msg,
          metadata: {
            bankType: "SBER"
          },
          isRead: false,
          isProcessed: false
        }
      })
      console.log("   ‚úÖ Created:", msg)
    }
    
    console.log("\nüéØ Device is now online with 5 notifications!")
    
  } catch (error) {
    console.error("‚ùå Error:", error)
  } finally {
    await db.$disconnect()
  }
}

forceDeviceOnline()
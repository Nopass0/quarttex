import Elysia, { t } from "elysia";
import { BankType } from "@prisma/client";

// Map BankType enum to display names
const bankDisplayNames: Record<BankType, string> = {
  SBERBANK: "–°–±–µ—Ä–±–∞–Ω–∫",
  RAIFFEISEN: "–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω",
  GAZPROMBANK: "–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫",
  POCHTABANK: "–ü–æ—á—Ç–∞ –ë–∞–Ω–∫",
  VTB: "–í–¢–ë",
  ROSSELKHOZBANK: "–†–æ—Å—Å–µ–ª—å—Ö–æ–∑–±–∞–Ω–∫",
  ALFABANK: "–ê–ª—å—Ñ–∞-–±–∞–Ω–∫",
  URALSIB: "–£—Ä–∞–ª—Å–∏–±",
  LOKOBANK: "–õ–æ–∫–æ-–ë–∞–Ω–∫",
  AKBARS: "–ê–∫ –ë–∞—Ä—Å",
  MKB: "–ú–ö–ë",
  SPBBANK: "–ë–∞–Ω–∫ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
  MTSBANK: "–ú–¢–° –ë–∞–Ω–∫",
  PROMSVYAZBANK: "–ü—Ä–æ–º—Å–≤—è–∑—å–±–∞–Ω–∫",
  OZONBANK: "–û–∑–æ–Ω –ë–∞–Ω–∫",
  OTKRITIE: "–û—Ç–∫—Ä—ã—Ç–∏–µ",
  RENAISSANCE: "–†–µ–Ω–µ—Å—Å–∞–Ω—Å",
  OTPBANK: "–û–¢–ü –ë–∞–Ω–∫",
  AVANGARD: "–ê–≤–∞–Ω–≥–∞—Ä–¥",
  VLADBUSINESSBANK: "–í–ª–∞–¥–±–∏–∑–Ω–µ—Å–±–∞–Ω–∫",
  TAVRICHESKIY: "–¢–∞–≤—Ä–∏—á–µ—Å–∫–∏–π",
  FORABANK: "–§–æ—Ä–∞-–ë–∞–Ω–∫",
  BCSBANK: "–ë–ö–° –ë–∞–Ω–∫",
  HOMECREDIT: "–•–æ—É–º –ö—Ä–µ–¥–∏—Ç",
  BBRBANK: "–ë–ë–† –ë–∞–Ω–∫",
  CREDITEUROPE: "–ö—Ä–µ–¥–∏—Ç –ï–≤—Ä–æ–ø–∞ –ë–∞–Ω–∫",
  RNKB: "–†–ù–ö–ë",
  UBRIR: "–£–ë–†–∏–†",
  GENBANK: "–ì–µ–Ω–±–∞–Ω–∫",
  SINARA: "–°–∏–Ω–∞—Ä–∞",
  ABSOLUTBANK: "–ê–±—Å–æ–ª—é—Ç –ë–∞–Ω–∫",
  MTSMONEY: "–ú–¢–° –î–µ–Ω—å–≥–∏",
  SVOYBANK: "–°–≤–æ–π –ë–∞–Ω–∫",
  TRANSKAPITALBANK: "–¢—Ä–∞–Ω—Å–ö–∞–ø–∏—Ç–∞–ª–ë–∞–Ω–∫",
  DOLINSK: "–î–æ–ª–∏–Ω—Å–∫",
  TBANK: "–¢-–ë–∞–Ω–∫",
  SOVCOMBANK: "–°–æ–≤–∫–æ–º–±–∞–Ω–∫",
  ROSBANK: "–†–æ—Å–±–∞–Ω–∫",
  UNICREDIT: "–Æ–Ω–∏–ö—Ä–µ–¥–∏—Ç",
  CITIBANK: "–°–∏—Ç–∏–±–∞–Ω–∫",
  RUSSIANSTANDARD: "–†—É—Å—Å–∫–∏–π –°—Ç–∞–Ω–¥–∞—Ä—Ç",
};

// Bank logos/icons (could be expanded with actual icon URLs)
const bankIcons: Partial<Record<BankType, string>> = {
  SBERBANK: "üíö",
  VTB: "üíô",
  ALFABANK: "üî¥",
  TBANK: "üíõ",
  GAZPROMBANK: "üîµ",
  // Add more icons as needed
};

export const banksApi = new Elysia({ prefix: "/banks" })
  // Get all available banks
  .get("/", async () => {
    // Get all bank types from the enum
    const banks = Object.entries(BankType).map(([key, value]) => ({
      code: value,
      name: bankDisplayNames[value as BankType] || value,
      icon: bankIcons[value as BankType] || "üè¶",
      // You could add more metadata here like:
      // - supported payment methods
      // - processing times
      // - limits
      // - fees
    }));

    return {
      success: true,
      banks: banks.sort((a, b) => a.name.localeCompare(b.name, "ru")),
    };
  })
  
  // Get popular/recommended banks
  .get("/popular", async () => {
    const popularBanks = [
      BankType.SBERBANK,
      BankType.VTB,
      BankType.ALFABANK,
      BankType.TBANK,
      BankType.GAZPROMBANK,
      BankType.RAIFFEISEN,
    ];

    const banks = popularBanks.map((bankType) => ({
      code: bankType,
      name: bankDisplayNames[bankType],
      icon: bankIcons[bankType] || "üè¶",
    }));

    return {
      success: true,
      banks,
    };
  });